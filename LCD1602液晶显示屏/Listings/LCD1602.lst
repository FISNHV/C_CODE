C51 COMPILER V9.54   LCD1602                                                               11/08/2022 13:48:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD1
                    -602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          
   4          sbit LCD_RS=P2^6;
   5          sbit LCD_RW=P2^5;
   6          sbit LCD_E=P2^7;
   7          
   8          #define LCD_DataPort P0
   9          
  10          void LCD_Delay()                //@11.0592MHz 1ms
  11          {
  12   1              unsigned char i, j;
  13   1      
  14   1              i = 2;
  15   1              j = 199;
  16   1              do
  17   1              {
  18   2                      while (--j);
  19   2              } while (--i);
  20   1      }
  21          
  22          
  23          void LCD_WriteCommand(unsigned char Command)
  24          {
  25   1              LCD_RS=0;
  26   1              LCD_RW=0;
  27   1              LCD_DataPort=Command;
  28   1              LCD_E=1;
  29   1              LCD_Delay();
  30   1              LCD_E=0;
  31   1              LCD_Delay();
  32   1      }
  33          
  34          void LCD_WriteData(unsigned char Data)
  35          {
  36   1              LCD_RS=1;
  37   1              LCD_RW=0;
  38   1              LCD_DataPort=Data;
  39   1              LCD_E=1;
  40   1              LCD_Delay();
  41   1              LCD_E=0;
  42   1              LCD_Delay();
  43   1      }
  44          
  45          void LCD_Init(void)
  46          {
  47   1              LCD_WriteCommand(0x38);
  48   1              LCD_WriteCommand(0x0C);
  49   1              LCD_WriteCommand(0x06);
  50   1              LCD_WriteCommand(0x01);
  51   1      }
  52                  
  53          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  54          {
C51 COMPILER V9.54   LCD1602                                                               11/08/2022 13:48:03 PAGE 2   

  55   1                      if(Line==1)
  56   1              {
  57   2                      LCD_WriteCommand(0x80|(Column-1));
  58   2              }
  59   1              else
  60   1              {
  61   2                      LCD_WriteCommand(0x80|(Column-1)+0x40);
  62   2              }
  63   1      }
  64          
  65          
  66          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
  67          {
  68   1              LCD_SetCursor(Line,Column);
  69   1              LCD_WriteData(Char);
  70   1      }       
  71          
  72          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char *String)
  73          {
  74   1              unsigned char i;
  75   1              LCD_SetCursor(Line,Column);
  76   1              for(i=0;String[i]!='\0';i++)
  77   1              {
  78   2                      LCD_WriteData(String[i]);
  79   2              }
  80   1      }
  81                  
  82          int LCD_Pow(int X,int Y)
  83          {
  84   1              unsigned char i;
  85   1              int Result=1;
  86   1              for(i=0;i<Y;i++)
  87   1              {
  88   2                      Result*=X;
  89   2              }
  90   1              return Result;
  91   1      }
  92          
  93          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
  94          {
  95   1              unsigned char i;
  96   1              LCD_SetCursor(Line,Column);
  97   1              for(i=Length;i>0;i--)
  98   1              {
  99   2                      LCD_WriteData('0'+Number/LCD_Pow(10,i-1)%10);
 100   2                      
 101   2              }
 102   1      }
 103          
 104          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 105          {
 106   1              unsigned char i;
 107   1              unsigned int Number1;
 108   1              LCD_SetCursor(Line,Column);
 109   1              if(Number>=0)
 110   1              {
 111   2                      LCD_WriteData('+');
 112   2                      Number1=Number;
 113   2              }
 114   1              else
 115   1              {
 116   2                      LCD_WriteData('-');
C51 COMPILER V9.54   LCD1602                                                               11/08/2022 13:48:03 PAGE 3   

 117   2                      Number1=-Number;
 118   2              }
 119   1                      for(i=Length;i>0;i--)
 120   1              {
 121   2                      LCD_WriteData('0'+Number1/LCD_Pow(10,i-1)%10);
 122   2                      
 123   2              }
 124   1      }
 125          
 126          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 127          {
 128   1              unsigned char i;
 129   1              unsigned char SingleNumber;
 130   1              LCD_SetCursor(Line,Column);
 131   1              for(i=Length;i>0;i--)
 132   1              {
 133   2                      SingleNumber=Number/LCD_Pow(16,i-1)%16;
 134   2                      if(SingleNumber<10)
 135   2                      {
 136   3                              LCD_WriteData('0'+SingleNumber);
 137   3                      }
 138   2                      else
 139   2                      {
 140   3                              LCD_WriteData('A'+SingleNumber-10);
 141   3                      }
 142   2                      
 143   2              }
 144   1      }
 145          
 146          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 147          {
 148   1              unsigned char i;
 149   1              LCD_SetCursor(Line,Column);
 150   1              for(i=Length;i>0;i--)
 151   1              {
 152   2                      LCD_WriteData('0'+Number/LCD_Pow(2,i-1)%2);
 153   2              }
 154   1      }
 155          
 156          
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
